# Range Examples
# Smart compilation: small ranges = inline, large ranges = IIFE

# Inclusive ranges (..)
def demoInclusive()
  nums = 1..5
  console.log("1..5 =", nums)     # [1, 2, 3, 4, 5]

# Exclusive ranges (...)
def demoExclusive()
  nums = 1...5
  console.log("1...5 =", nums)    # [1, 2, 3, 4]

# Descending ranges
def demoDescending()
  nums = 10..1
  console.log("10..1 =", nums.slice(0, 5))  # [10, 9, 8, 7, 6, ...]

# Large ranges (generates IIFE, not inline)
def demoLarge()
  nums = 1..100
  console.log("1..100 length =", nums.length)  # 100
  console.log("First 5:", nums.slice(0, 5))    # [1, 2, 3, 4, 5]

# Dynamic ranges (runtime values)
def rangeBetween(start, end)
  start..end

# Using ranges
def sumRange(n)
  nums = 1..n
  sum = 0
  nums.forEach((x) => sum = sum + x)
  sum

# Range in array
def mixedArray()
  arr = [0, 1..3, 10, 20..22]
  console.log("Mixed:", arr)  # [0, [1,2,3], 10, [20,21,22]]

# Practical: Generate test data
def generateIds(count)
  ids = 1..count
  ids.map((id) => id)

